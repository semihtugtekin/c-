//ders 2
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PT02_20231009_Degiskenler
{
    internal class Program
    {
        static void Main(string[] args)
        {
            // Hem değişken tanımlanmış hem de başlangıç değeri atanmış
            byte a = 10;

            // byte b = 256;  max 255 olabilir
            // byte c = -1;   min 0 olabilir
            // byte d = 3.7;  ondalıklı değer alamaz tam sayı olmak zorunda

            int b;  // Sadece değişken tanımlanmış olur
            // b = "20";  Sayısal bir tipe string değer doğrudan atanamaz

            // Değişkenleri ayrı ayrı tanımlayabiliriz
            //string adi;
            //string soyadi;
            //string adres;

            // Tipleri aynı ise tek seferde tanımlayabiliriz
            string adi, soyadi, adres;

            adres = "Nevşehir";
            // adres = 10;  string tipe sayısal değer doğrudan atanamaz

            bool aktif;
            aktif = true;
            aktif = false;

            DateTime zaman = DateTime.Now;
            // DateTime tarih ve saat tutan bir tip
            // DateTime.Now o anki zamanı veren bir komut


            int yas;
            yas = 20;

            

            {
                string telefon;
                telefon = "03841112233";
                yas = 40;
            }

            yas = 30;

            // telefon değişkeni farklı bir scope da tanımlandığı için burada kullanılamaz.
            //telefon = "03841112233";

            //int yas; // Bu deişkenaynı scope da daha önce tanımlanmış, tekrar tanımlanamaz

            {
                string telefon;
            }

            int x = 10;
            int y = 5;
            int q;

            x = y;
            q = y;

            byte z;
            z = 200;
            //z = y;
            z = (byte)y;

            y = z; // byte değerini int e atayabiliriz
            //z = y; // int değişkeni byte a doğrudan atanamaz.
        

        }
    }
}
